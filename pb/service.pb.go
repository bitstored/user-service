// Code generated by protoc-gen-go. DO NOT EDIT.
// source: service.proto

/*
Package pb is a generated protocol buffer package.

It is generated from these files:
	service.proto

It has these top-level messages:
	User
	CreateAccountRequest
	CreateAccountResponse
	ActivateAccountRequest
	ActivateAccountResponse
	ResendActivationMailRequest
	ResendActivationMailResponse
	UpdateAccountRequest
	UpdateAccountResponse
	DeleteAccountRequest
	DeleteAccountResponse
	GetAccountRequest
	GetAccountResponse
	LoginRequest
	LoginResponse
	LogoutRequest
	LogoutResponse
	ResetPasswordRequest
	ResetPasswordResponse
	LockAccountRequest
	LockAccountResponse
	UnlockAccountRequest
	UnlockAccountResponse
	RequestUnlockAccountRequest
	RequestUnlockAccountResponse
	ListUsersRequest
	ListUsersResponse
*/
package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "google.golang.org/genproto/googleapis/api/annotations"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type User struct {
	FirstName   string `protobuf:"bytes,1,opt,name=first_name,json=firstName" json:"first_name,omitempty"`
	LastName    string `protobuf:"bytes,2,opt,name=last_name,json=lastName" json:"last_name,omitempty"`
	Birthday    string `protobuf:"bytes,3,opt,name=birthday" json:"birthday,omitempty"`
	Email       string `protobuf:"bytes,4,opt,name=email" json:"email,omitempty"`
	Username    string `protobuf:"bytes,5,opt,name=username" json:"username,omitempty"`
	Password    string `protobuf:"bytes,6,opt,name=password" json:"password,omitempty"`
	PhoneNumber string `protobuf:"bytes,7,opt,name=phone_number,json=phoneNumber" json:"phone_number,omitempty"`
	Photo       []byte `protobuf:"bytes,8,opt,name=photo,proto3" json:"photo,omitempty"`
	AvailableMb uint32 `protobuf:"varint,9,opt,name=available_mb,json=availableMb" json:"available_mb,omitempty"`
}

func (m *User) Reset()                    { *m = User{} }
func (m *User) String() string            { return proto.CompactTextString(m) }
func (*User) ProtoMessage()               {}
func (*User) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *User) GetFirstName() string {
	if m != nil {
		return m.FirstName
	}
	return ""
}

func (m *User) GetLastName() string {
	if m != nil {
		return m.LastName
	}
	return ""
}

func (m *User) GetBirthday() string {
	if m != nil {
		return m.Birthday
	}
	return ""
}

func (m *User) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *User) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *User) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *User) GetPhoneNumber() string {
	if m != nil {
		return m.PhoneNumber
	}
	return ""
}

func (m *User) GetPhoto() []byte {
	if m != nil {
		return m.Photo
	}
	return nil
}

func (m *User) GetAvailableMb() uint32 {
	if m != nil {
		return m.AvailableMb
	}
	return 0
}

type CreateAccountRequest struct {
	User         *User  `protobuf:"bytes,1,opt,name=user" json:"user,omitempty"`
	CreationDate string `protobuf:"bytes,2,opt,name=creation_date,json=creationDate" json:"creation_date,omitempty"`
}

func (m *CreateAccountRequest) Reset()                    { *m = CreateAccountRequest{} }
func (m *CreateAccountRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateAccountRequest) ProtoMessage()               {}
func (*CreateAccountRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *CreateAccountRequest) GetUser() *User {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *CreateAccountRequest) GetCreationDate() string {
	if m != nil {
		return m.CreationDate
	}
	return ""
}

type CreateAccountResponse struct {
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId" json:"user_id,omitempty"`
}

func (m *CreateAccountResponse) Reset()                    { *m = CreateAccountResponse{} }
func (m *CreateAccountResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateAccountResponse) ProtoMessage()               {}
func (*CreateAccountResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *CreateAccountResponse) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

type ActivateAccountRequest struct {
	ActivationToken string `protobuf:"bytes,1,opt,name=activation_token,json=activationToken" json:"activation_token,omitempty"`
	ActivationDate  string `protobuf:"bytes,2,opt,name=activation_date,json=activationDate" json:"activation_date,omitempty"`
}

func (m *ActivateAccountRequest) Reset()                    { *m = ActivateAccountRequest{} }
func (m *ActivateAccountRequest) String() string            { return proto.CompactTextString(m) }
func (*ActivateAccountRequest) ProtoMessage()               {}
func (*ActivateAccountRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *ActivateAccountRequest) GetActivationToken() string {
	if m != nil {
		return m.ActivationToken
	}
	return ""
}

func (m *ActivateAccountRequest) GetActivationDate() string {
	if m != nil {
		return m.ActivationDate
	}
	return ""
}

type ActivateAccountResponse struct {
	SessionToken string `protobuf:"bytes,1,opt,name=session_token,json=sessionToken" json:"session_token,omitempty"`
}

func (m *ActivateAccountResponse) Reset()                    { *m = ActivateAccountResponse{} }
func (m *ActivateAccountResponse) String() string            { return proto.CompactTextString(m) }
func (*ActivateAccountResponse) ProtoMessage()               {}
func (*ActivateAccountResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *ActivateAccountResponse) GetSessionToken() string {
	if m != nil {
		return m.SessionToken
	}
	return ""
}

type ResendActivationMailRequest struct {
	Email string `protobuf:"bytes,1,opt,name=email" json:"email,omitempty"`
}

func (m *ResendActivationMailRequest) Reset()                    { *m = ResendActivationMailRequest{} }
func (m *ResendActivationMailRequest) String() string            { return proto.CompactTextString(m) }
func (*ResendActivationMailRequest) ProtoMessage()               {}
func (*ResendActivationMailRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *ResendActivationMailRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

type ResendActivationMailResponse struct {
}

func (m *ResendActivationMailResponse) Reset()                    { *m = ResendActivationMailResponse{} }
func (m *ResendActivationMailResponse) String() string            { return proto.CompactTextString(m) }
func (*ResendActivationMailResponse) ProtoMessage()               {}
func (*ResendActivationMailResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

type UpdateAccountRequest struct {
	User         *User  `protobuf:"bytes,1,opt,name=user" json:"user,omitempty"`
	CreationDate string `protobuf:"bytes,2,opt,name=creation_date,json=creationDate" json:"creation_date,omitempty"`
}

func (m *UpdateAccountRequest) Reset()                    { *m = UpdateAccountRequest{} }
func (m *UpdateAccountRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateAccountRequest) ProtoMessage()               {}
func (*UpdateAccountRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *UpdateAccountRequest) GetUser() *User {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *UpdateAccountRequest) GetCreationDate() string {
	if m != nil {
		return m.CreationDate
	}
	return ""
}

type UpdateAccountResponse struct {
}

func (m *UpdateAccountResponse) Reset()                    { *m = UpdateAccountResponse{} }
func (m *UpdateAccountResponse) String() string            { return proto.CompactTextString(m) }
func (*UpdateAccountResponse) ProtoMessage()               {}
func (*UpdateAccountResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

type DeleteAccountRequest struct {
	SessionToken string `protobuf:"bytes,1,opt,name=session_token,json=sessionToken" json:"session_token,omitempty"`
}

func (m *DeleteAccountRequest) Reset()                    { *m = DeleteAccountRequest{} }
func (m *DeleteAccountRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteAccountRequest) ProtoMessage()               {}
func (*DeleteAccountRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *DeleteAccountRequest) GetSessionToken() string {
	if m != nil {
		return m.SessionToken
	}
	return ""
}

type DeleteAccountResponse struct {
}

func (m *DeleteAccountResponse) Reset()                    { *m = DeleteAccountResponse{} }
func (m *DeleteAccountResponse) String() string            { return proto.CompactTextString(m) }
func (*DeleteAccountResponse) ProtoMessage()               {}
func (*DeleteAccountResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

type GetAccountRequest struct {
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
}

func (m *GetAccountRequest) Reset()                    { *m = GetAccountRequest{} }
func (m *GetAccountRequest) String() string            { return proto.CompactTextString(m) }
func (*GetAccountRequest) ProtoMessage()               {}
func (*GetAccountRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *GetAccountRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type GetAccountResponse struct {
	User *User `protobuf:"bytes,1,opt,name=user" json:"user,omitempty"`
}

func (m *GetAccountResponse) Reset()                    { *m = GetAccountResponse{} }
func (m *GetAccountResponse) String() string            { return proto.CompactTextString(m) }
func (*GetAccountResponse) ProtoMessage()               {}
func (*GetAccountResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *GetAccountResponse) GetUser() *User {
	if m != nil {
		return m.User
	}
	return nil
}

type LoginRequest struct {
	Username string `protobuf:"bytes,1,opt,name=username" json:"username,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password" json:"password,omitempty"`
}

func (m *LoginRequest) Reset()                    { *m = LoginRequest{} }
func (m *LoginRequest) String() string            { return proto.CompactTextString(m) }
func (*LoginRequest) ProtoMessage()               {}
func (*LoginRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *LoginRequest) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *LoginRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type LoginResponse struct {
	SessionToken string `protobuf:"bytes,1,opt,name=session_token,json=sessionToken" json:"session_token,omitempty"`
}

func (m *LoginResponse) Reset()                    { *m = LoginResponse{} }
func (m *LoginResponse) String() string            { return proto.CompactTextString(m) }
func (*LoginResponse) ProtoMessage()               {}
func (*LoginResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

func (m *LoginResponse) GetSessionToken() string {
	if m != nil {
		return m.SessionToken
	}
	return ""
}

type LogoutRequest struct {
	SessionToken string `protobuf:"bytes,1,opt,name=session_token,json=sessionToken" json:"session_token,omitempty"`
}

func (m *LogoutRequest) Reset()                    { *m = LogoutRequest{} }
func (m *LogoutRequest) String() string            { return proto.CompactTextString(m) }
func (*LogoutRequest) ProtoMessage()               {}
func (*LogoutRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

func (m *LogoutRequest) GetSessionToken() string {
	if m != nil {
		return m.SessionToken
	}
	return ""
}

type LogoutResponse struct {
}

func (m *LogoutResponse) Reset()                    { *m = LogoutResponse{} }
func (m *LogoutResponse) String() string            { return proto.CompactTextString(m) }
func (*LogoutResponse) ProtoMessage()               {}
func (*LogoutResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{16} }

type ResetPasswordRequest struct {
	SessionToken string `protobuf:"bytes,1,opt,name=session_token,json=sessionToken" json:"session_token,omitempty"`
	Email        string `protobuf:"bytes,2,opt,name=email" json:"email,omitempty"`
	OldPassword  string `protobuf:"bytes,3,opt,name=old_password,json=oldPassword" json:"old_password,omitempty"`
	NewPassword  string `protobuf:"bytes,4,opt,name=new_password,json=newPassword" json:"new_password,omitempty"`
}

func (m *ResetPasswordRequest) Reset()                    { *m = ResetPasswordRequest{} }
func (m *ResetPasswordRequest) String() string            { return proto.CompactTextString(m) }
func (*ResetPasswordRequest) ProtoMessage()               {}
func (*ResetPasswordRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{17} }

func (m *ResetPasswordRequest) GetSessionToken() string {
	if m != nil {
		return m.SessionToken
	}
	return ""
}

func (m *ResetPasswordRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *ResetPasswordRequest) GetOldPassword() string {
	if m != nil {
		return m.OldPassword
	}
	return ""
}

func (m *ResetPasswordRequest) GetNewPassword() string {
	if m != nil {
		return m.NewPassword
	}
	return ""
}

type ResetPasswordResponse struct {
}

func (m *ResetPasswordResponse) Reset()                    { *m = ResetPasswordResponse{} }
func (m *ResetPasswordResponse) String() string            { return proto.CompactTextString(m) }
func (*ResetPasswordResponse) ProtoMessage()               {}
func (*ResetPasswordResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{18} }

type LockAccountRequest struct {
	SessionToken string `protobuf:"bytes,1,opt,name=session_token,json=sessionToken" json:"session_token,omitempty"`
}

func (m *LockAccountRequest) Reset()                    { *m = LockAccountRequest{} }
func (m *LockAccountRequest) String() string            { return proto.CompactTextString(m) }
func (*LockAccountRequest) ProtoMessage()               {}
func (*LockAccountRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{19} }

func (m *LockAccountRequest) GetSessionToken() string {
	if m != nil {
		return m.SessionToken
	}
	return ""
}

type LockAccountResponse struct {
}

func (m *LockAccountResponse) Reset()                    { *m = LockAccountResponse{} }
func (m *LockAccountResponse) String() string            { return proto.CompactTextString(m) }
func (*LockAccountResponse) ProtoMessage()               {}
func (*LockAccountResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{20} }

type UnlockAccountRequest struct {
	Email string `protobuf:"bytes,1,opt,name=email" json:"email,omitempty"`
	Token string `protobuf:"bytes,2,opt,name=token" json:"token,omitempty"`
}

func (m *UnlockAccountRequest) Reset()                    { *m = UnlockAccountRequest{} }
func (m *UnlockAccountRequest) String() string            { return proto.CompactTextString(m) }
func (*UnlockAccountRequest) ProtoMessage()               {}
func (*UnlockAccountRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{21} }

func (m *UnlockAccountRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *UnlockAccountRequest) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

type UnlockAccountResponse struct {
}

func (m *UnlockAccountResponse) Reset()                    { *m = UnlockAccountResponse{} }
func (m *UnlockAccountResponse) String() string            { return proto.CompactTextString(m) }
func (*UnlockAccountResponse) ProtoMessage()               {}
func (*UnlockAccountResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{22} }

type RequestUnlockAccountRequest struct {
	Email    string `protobuf:"bytes,1,opt,name=email" json:"email,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password" json:"password,omitempty"`
}

func (m *RequestUnlockAccountRequest) Reset()                    { *m = RequestUnlockAccountRequest{} }
func (m *RequestUnlockAccountRequest) String() string            { return proto.CompactTextString(m) }
func (*RequestUnlockAccountRequest) ProtoMessage()               {}
func (*RequestUnlockAccountRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{23} }

func (m *RequestUnlockAccountRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *RequestUnlockAccountRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type RequestUnlockAccountResponse struct {
}

func (m *RequestUnlockAccountResponse) Reset()                    { *m = RequestUnlockAccountResponse{} }
func (m *RequestUnlockAccountResponse) String() string            { return proto.CompactTextString(m) }
func (*RequestUnlockAccountResponse) ProtoMessage()               {}
func (*RequestUnlockAccountResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{24} }

type ListUsersRequest struct {
}

func (m *ListUsersRequest) Reset()                    { *m = ListUsersRequest{} }
func (m *ListUsersRequest) String() string            { return proto.CompactTextString(m) }
func (*ListUsersRequest) ProtoMessage()               {}
func (*ListUsersRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{25} }

type ListUsersResponse struct {
	Users []*User `protobuf:"bytes,1,rep,name=users" json:"users,omitempty"`
}

func (m *ListUsersResponse) Reset()                    { *m = ListUsersResponse{} }
func (m *ListUsersResponse) String() string            { return proto.CompactTextString(m) }
func (*ListUsersResponse) ProtoMessage()               {}
func (*ListUsersResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{26} }

func (m *ListUsersResponse) GetUsers() []*User {
	if m != nil {
		return m.Users
	}
	return nil
}

func init() {
	proto.RegisterType((*User)(nil), "account_service.User")
	proto.RegisterType((*CreateAccountRequest)(nil), "account_service.CreateAccountRequest")
	proto.RegisterType((*CreateAccountResponse)(nil), "account_service.CreateAccountResponse")
	proto.RegisterType((*ActivateAccountRequest)(nil), "account_service.ActivateAccountRequest")
	proto.RegisterType((*ActivateAccountResponse)(nil), "account_service.ActivateAccountResponse")
	proto.RegisterType((*ResendActivationMailRequest)(nil), "account_service.ResendActivationMailRequest")
	proto.RegisterType((*ResendActivationMailResponse)(nil), "account_service.ResendActivationMailResponse")
	proto.RegisterType((*UpdateAccountRequest)(nil), "account_service.UpdateAccountRequest")
	proto.RegisterType((*UpdateAccountResponse)(nil), "account_service.UpdateAccountResponse")
	proto.RegisterType((*DeleteAccountRequest)(nil), "account_service.DeleteAccountRequest")
	proto.RegisterType((*DeleteAccountResponse)(nil), "account_service.DeleteAccountResponse")
	proto.RegisterType((*GetAccountRequest)(nil), "account_service.GetAccountRequest")
	proto.RegisterType((*GetAccountResponse)(nil), "account_service.GetAccountResponse")
	proto.RegisterType((*LoginRequest)(nil), "account_service.LoginRequest")
	proto.RegisterType((*LoginResponse)(nil), "account_service.LoginResponse")
	proto.RegisterType((*LogoutRequest)(nil), "account_service.LogoutRequest")
	proto.RegisterType((*LogoutResponse)(nil), "account_service.LogoutResponse")
	proto.RegisterType((*ResetPasswordRequest)(nil), "account_service.ResetPasswordRequest")
	proto.RegisterType((*ResetPasswordResponse)(nil), "account_service.ResetPasswordResponse")
	proto.RegisterType((*LockAccountRequest)(nil), "account_service.LockAccountRequest")
	proto.RegisterType((*LockAccountResponse)(nil), "account_service.LockAccountResponse")
	proto.RegisterType((*UnlockAccountRequest)(nil), "account_service.UnlockAccountRequest")
	proto.RegisterType((*UnlockAccountResponse)(nil), "account_service.UnlockAccountResponse")
	proto.RegisterType((*RequestUnlockAccountRequest)(nil), "account_service.RequestUnlockAccountRequest")
	proto.RegisterType((*RequestUnlockAccountResponse)(nil), "account_service.RequestUnlockAccountResponse")
	proto.RegisterType((*ListUsersRequest)(nil), "account_service.ListUsersRequest")
	proto.RegisterType((*ListUsersResponse)(nil), "account_service.ListUsersResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Account service

type AccountClient interface {
	CreateAccount(ctx context.Context, in *CreateAccountRequest, opts ...grpc.CallOption) (*CreateAccountResponse, error)
	ResendActivationMail(ctx context.Context, in *ResendActivationMailRequest, opts ...grpc.CallOption) (*ResendActivationMailResponse, error)
	ActivateAccount(ctx context.Context, in *ActivateAccountRequest, opts ...grpc.CallOption) (*ActivateAccountResponse, error)
	UpdateAccount(ctx context.Context, in *UpdateAccountRequest, opts ...grpc.CallOption) (*UpdateAccountResponse, error)
	DeleteAccount(ctx context.Context, in *DeleteAccountRequest, opts ...grpc.CallOption) (*DeleteAccountResponse, error)
	GetAccount(ctx context.Context, in *GetAccountRequest, opts ...grpc.CallOption) (*GetAccountResponse, error)
	Login(ctx context.Context, in *LoginRequest, opts ...grpc.CallOption) (*LoginResponse, error)
	Logout(ctx context.Context, in *LogoutRequest, opts ...grpc.CallOption) (*LogoutResponse, error)
	ResetPassword(ctx context.Context, in *ResetPasswordRequest, opts ...grpc.CallOption) (*ResetPasswordResponse, error)
	LockAccount(ctx context.Context, in *LockAccountRequest, opts ...grpc.CallOption) (*LockAccountResponse, error)
	RequestUnlockAccount(ctx context.Context, in *RequestUnlockAccountRequest, opts ...grpc.CallOption) (*RequestUnlockAccountResponse, error)
	UnlockAccount(ctx context.Context, in *UnlockAccountRequest, opts ...grpc.CallOption) (*UnlockAccountResponse, error)
	ListUsers(ctx context.Context, in *ListUsersRequest, opts ...grpc.CallOption) (*ListUsersResponse, error)
}

type accountClient struct {
	cc *grpc.ClientConn
}

func NewAccountClient(cc *grpc.ClientConn) AccountClient {
	return &accountClient{cc}
}

func (c *accountClient) CreateAccount(ctx context.Context, in *CreateAccountRequest, opts ...grpc.CallOption) (*CreateAccountResponse, error) {
	out := new(CreateAccountResponse)
	err := grpc.Invoke(ctx, "/account_service.Account/CreateAccount", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountClient) ResendActivationMail(ctx context.Context, in *ResendActivationMailRequest, opts ...grpc.CallOption) (*ResendActivationMailResponse, error) {
	out := new(ResendActivationMailResponse)
	err := grpc.Invoke(ctx, "/account_service.Account/ResendActivationMail", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountClient) ActivateAccount(ctx context.Context, in *ActivateAccountRequest, opts ...grpc.CallOption) (*ActivateAccountResponse, error) {
	out := new(ActivateAccountResponse)
	err := grpc.Invoke(ctx, "/account_service.Account/ActivateAccount", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountClient) UpdateAccount(ctx context.Context, in *UpdateAccountRequest, opts ...grpc.CallOption) (*UpdateAccountResponse, error) {
	out := new(UpdateAccountResponse)
	err := grpc.Invoke(ctx, "/account_service.Account/UpdateAccount", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountClient) DeleteAccount(ctx context.Context, in *DeleteAccountRequest, opts ...grpc.CallOption) (*DeleteAccountResponse, error) {
	out := new(DeleteAccountResponse)
	err := grpc.Invoke(ctx, "/account_service.Account/DeleteAccount", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountClient) GetAccount(ctx context.Context, in *GetAccountRequest, opts ...grpc.CallOption) (*GetAccountResponse, error) {
	out := new(GetAccountResponse)
	err := grpc.Invoke(ctx, "/account_service.Account/GetAccount", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountClient) Login(ctx context.Context, in *LoginRequest, opts ...grpc.CallOption) (*LoginResponse, error) {
	out := new(LoginResponse)
	err := grpc.Invoke(ctx, "/account_service.Account/Login", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountClient) Logout(ctx context.Context, in *LogoutRequest, opts ...grpc.CallOption) (*LogoutResponse, error) {
	out := new(LogoutResponse)
	err := grpc.Invoke(ctx, "/account_service.Account/Logout", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountClient) ResetPassword(ctx context.Context, in *ResetPasswordRequest, opts ...grpc.CallOption) (*ResetPasswordResponse, error) {
	out := new(ResetPasswordResponse)
	err := grpc.Invoke(ctx, "/account_service.Account/ResetPassword", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountClient) LockAccount(ctx context.Context, in *LockAccountRequest, opts ...grpc.CallOption) (*LockAccountResponse, error) {
	out := new(LockAccountResponse)
	err := grpc.Invoke(ctx, "/account_service.Account/LockAccount", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountClient) RequestUnlockAccount(ctx context.Context, in *RequestUnlockAccountRequest, opts ...grpc.CallOption) (*RequestUnlockAccountResponse, error) {
	out := new(RequestUnlockAccountResponse)
	err := grpc.Invoke(ctx, "/account_service.Account/RequestUnlockAccount", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountClient) UnlockAccount(ctx context.Context, in *UnlockAccountRequest, opts ...grpc.CallOption) (*UnlockAccountResponse, error) {
	out := new(UnlockAccountResponse)
	err := grpc.Invoke(ctx, "/account_service.Account/UnlockAccount", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountClient) ListUsers(ctx context.Context, in *ListUsersRequest, opts ...grpc.CallOption) (*ListUsersResponse, error) {
	out := new(ListUsersResponse)
	err := grpc.Invoke(ctx, "/account_service.Account/ListUsers", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Account service

type AccountServer interface {
	CreateAccount(context.Context, *CreateAccountRequest) (*CreateAccountResponse, error)
	ResendActivationMail(context.Context, *ResendActivationMailRequest) (*ResendActivationMailResponse, error)
	ActivateAccount(context.Context, *ActivateAccountRequest) (*ActivateAccountResponse, error)
	UpdateAccount(context.Context, *UpdateAccountRequest) (*UpdateAccountResponse, error)
	DeleteAccount(context.Context, *DeleteAccountRequest) (*DeleteAccountResponse, error)
	GetAccount(context.Context, *GetAccountRequest) (*GetAccountResponse, error)
	Login(context.Context, *LoginRequest) (*LoginResponse, error)
	Logout(context.Context, *LogoutRequest) (*LogoutResponse, error)
	ResetPassword(context.Context, *ResetPasswordRequest) (*ResetPasswordResponse, error)
	LockAccount(context.Context, *LockAccountRequest) (*LockAccountResponse, error)
	RequestUnlockAccount(context.Context, *RequestUnlockAccountRequest) (*RequestUnlockAccountResponse, error)
	UnlockAccount(context.Context, *UnlockAccountRequest) (*UnlockAccountResponse, error)
	ListUsers(context.Context, *ListUsersRequest) (*ListUsersResponse, error)
}

func RegisterAccountServer(s *grpc.Server, srv AccountServer) {
	s.RegisterService(&_Account_serviceDesc, srv)
}

func _Account_CreateAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateAccountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServer).CreateAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/account_service.Account/CreateAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServer).CreateAccount(ctx, req.(*CreateAccountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Account_ResendActivationMail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ResendActivationMailRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServer).ResendActivationMail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/account_service.Account/ResendActivationMail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServer).ResendActivationMail(ctx, req.(*ResendActivationMailRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Account_ActivateAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ActivateAccountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServer).ActivateAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/account_service.Account/ActivateAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServer).ActivateAccount(ctx, req.(*ActivateAccountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Account_UpdateAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateAccountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServer).UpdateAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/account_service.Account/UpdateAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServer).UpdateAccount(ctx, req.(*UpdateAccountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Account_DeleteAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteAccountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServer).DeleteAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/account_service.Account/DeleteAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServer).DeleteAccount(ctx, req.(*DeleteAccountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Account_GetAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAccountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServer).GetAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/account_service.Account/GetAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServer).GetAccount(ctx, req.(*GetAccountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Account_Login_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LoginRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServer).Login(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/account_service.Account/Login",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServer).Login(ctx, req.(*LoginRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Account_Logout_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LogoutRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServer).Logout(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/account_service.Account/Logout",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServer).Logout(ctx, req.(*LogoutRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Account_ResetPassword_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ResetPasswordRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServer).ResetPassword(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/account_service.Account/ResetPassword",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServer).ResetPassword(ctx, req.(*ResetPasswordRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Account_LockAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LockAccountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServer).LockAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/account_service.Account/LockAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServer).LockAccount(ctx, req.(*LockAccountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Account_RequestUnlockAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestUnlockAccountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServer).RequestUnlockAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/account_service.Account/RequestUnlockAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServer).RequestUnlockAccount(ctx, req.(*RequestUnlockAccountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Account_UnlockAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UnlockAccountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServer).UnlockAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/account_service.Account/UnlockAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServer).UnlockAccount(ctx, req.(*UnlockAccountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Account_ListUsers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListUsersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServer).ListUsers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/account_service.Account/ListUsers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServer).ListUsers(ctx, req.(*ListUsersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Account_serviceDesc = grpc.ServiceDesc{
	ServiceName: "account_service.Account",
	HandlerType: (*AccountServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateAccount",
			Handler:    _Account_CreateAccount_Handler,
		},
		{
			MethodName: "ResendActivationMail",
			Handler:    _Account_ResendActivationMail_Handler,
		},
		{
			MethodName: "ActivateAccount",
			Handler:    _Account_ActivateAccount_Handler,
		},
		{
			MethodName: "UpdateAccount",
			Handler:    _Account_UpdateAccount_Handler,
		},
		{
			MethodName: "DeleteAccount",
			Handler:    _Account_DeleteAccount_Handler,
		},
		{
			MethodName: "GetAccount",
			Handler:    _Account_GetAccount_Handler,
		},
		{
			MethodName: "Login",
			Handler:    _Account_Login_Handler,
		},
		{
			MethodName: "Logout",
			Handler:    _Account_Logout_Handler,
		},
		{
			MethodName: "ResetPassword",
			Handler:    _Account_ResetPassword_Handler,
		},
		{
			MethodName: "LockAccount",
			Handler:    _Account_LockAccount_Handler,
		},
		{
			MethodName: "RequestUnlockAccount",
			Handler:    _Account_RequestUnlockAccount_Handler,
		},
		{
			MethodName: "UnlockAccount",
			Handler:    _Account_UnlockAccount_Handler,
		},
		{
			MethodName: "ListUsers",
			Handler:    _Account_ListUsers_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "service.proto",
}

func init() { proto.RegisterFile("service.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 1031 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x57, 0xcd, 0x6e, 0x23, 0x45,
	0x10, 0xd6, 0x78, 0xf3, 0xe7, 0xb2, 0x9d, 0x64, 0x7b, 0x6d, 0x3c, 0x4c, 0xd6, 0x59, 0x67, 0xbc,
	0x9b, 0x35, 0x7f, 0x31, 0xec, 0x72, 0x01, 0x24, 0x20, 0xcb, 0x0a, 0x84, 0x94, 0x5d, 0x56, 0x16,
	0xb9, 0x70, 0xb1, 0xda, 0x9e, 0x4e, 0x32, 0xca, 0x78, 0xda, 0xcc, 0xb4, 0x13, 0xb8, 0x70, 0x00,
	0x09, 0x21, 0x71, 0xe4, 0xc0, 0x81, 0x23, 0x0f, 0xc3, 0x03, 0xf0, 0x0a, 0x3c, 0x08, 0xea, 0xea,
	0x1e, 0x7b, 0x3c, 0xd3, 0x9e, 0x38, 0x48, 0x1c, 0xa7, 0xba, 0xaa, 0xbe, 0xaf, 0xab, 0xaa, 0xbf,
	0xd2, 0x40, 0x2d, 0x66, 0xd1, 0x95, 0x3f, 0x62, 0x47, 0x93, 0x88, 0x0b, 0x4e, 0x76, 0xe8, 0x68,
	0xc4, 0xa7, 0xa1, 0x18, 0x68, 0xb3, 0x73, 0xff, 0x9c, 0xf3, 0xf3, 0x80, 0xf5, 0xe8, 0xc4, 0xef,
	0xd1, 0x30, 0xe4, 0x82, 0x0a, 0x9f, 0x87, 0xb1, 0x72, 0x77, 0x7f, 0x29, 0xc1, 0xda, 0x69, 0xcc,
	0x22, 0xd2, 0x02, 0x38, 0xf3, 0xa3, 0x58, 0x0c, 0x42, 0x3a, 0x66, 0xb6, 0xd5, 0xb6, 0xba, 0xe5,
	0x7e, 0x19, 0x2d, 0x2f, 0xe9, 0x98, 0x91, 0x3d, 0x28, 0x07, 0x34, 0x39, 0x2d, 0xe1, 0xe9, 0x96,
	0x34, 0xe0, 0xa1, 0x03, 0x5b, 0x43, 0x3f, 0x12, 0x17, 0x1e, 0xfd, 0xde, 0xbe, 0xa3, 0xce, 0x92,
	0x6f, 0x52, 0x87, 0x75, 0x36, 0xa6, 0x7e, 0x60, 0xaf, 0xe1, 0x81, 0xfa, 0x90, 0x11, 0xd3, 0x98,
	0x45, 0x98, 0x6d, 0x5d, 0x45, 0x24, 0xdf, 0xf2, 0x6c, 0x42, 0xe3, 0xf8, 0x9a, 0x47, 0x9e, 0xbd,
	0xa1, 0xce, 0x92, 0x6f, 0x72, 0x00, 0xd5, 0xc9, 0x05, 0x0f, 0xd9, 0x20, 0x9c, 0x8e, 0x87, 0x2c,
	0xb2, 0x37, 0xf1, 0xbc, 0x82, 0xb6, 0x97, 0x68, 0x92, 0x80, 0x93, 0x0b, 0x2e, 0xb8, 0xbd, 0xd5,
	0xb6, 0xba, 0xd5, 0xbe, 0xfa, 0x90, 0x81, 0xf4, 0x8a, 0xfa, 0x01, 0x1d, 0x06, 0x6c, 0x30, 0x1e,
	0xda, 0xe5, 0xb6, 0xd5, 0xad, 0xf5, 0x2b, 0x33, 0xdb, 0x8b, 0xa1, 0x7b, 0x06, 0xf5, 0xcf, 0x22,
	0x46, 0x05, 0x3b, 0x56, 0x15, 0xec, 0xb3, 0x6f, 0xa7, 0x2c, 0x16, 0xe4, 0x0d, 0x58, 0x93, 0xdc,
	0xb0, 0x26, 0x95, 0x27, 0x8d, 0xa3, 0x4c, 0x81, 0x8f, 0x64, 0xf9, 0xfa, 0xe8, 0x42, 0x3a, 0x50,
	0x1b, 0xc9, 0x14, 0x3e, 0x0f, 0x07, 0x1e, 0x15, 0x49, 0xa5, 0xaa, 0x89, 0xf1, 0x39, 0x15, 0xcc,
	0x7d, 0x17, 0x1a, 0x19, 0x9c, 0x78, 0xc2, 0xc3, 0x98, 0x91, 0x26, 0x6c, 0xca, 0x2c, 0x03, 0xdf,
	0xd3, 0xf5, 0xdf, 0x90, 0x9f, 0x5f, 0x7a, 0x6e, 0x00, 0xaf, 0x1d, 0x8f, 0x84, 0x7f, 0x65, 0xe2,
	0xb6, 0x4b, 0xd5, 0x89, 0x84, 0x14, 0xfc, 0x92, 0x85, 0x3a, 0x76, 0x67, 0x6e, 0xff, 0x5a, 0x9a,
	0xc9, 0x63, 0x48, 0x99, 0xd2, 0xec, 0xb6, 0xe7, 0x66, 0xe4, 0xf7, 0x31, 0x34, 0x73, 0x68, 0x9a,
	0x61, 0x47, 0x4e, 0x5b, 0x1c, 0x67, 0xb1, 0xaa, 0xda, 0x88, 0x40, 0xee, 0x53, 0xd8, 0xeb, 0xb3,
	0x98, 0x85, 0xde, 0xf1, 0x2c, 0xef, 0x0b, 0xea, 0x07, 0x09, 0xe5, 0xd9, 0x40, 0x58, 0xa9, 0x81,
	0x70, 0xf7, 0xe1, 0xbe, 0x39, 0x48, 0x21, 0xcb, 0xe6, 0x9c, 0x4e, 0xbc, 0xff, 0xbf, 0x39, 0x4d,
	0x68, 0x64, 0x70, 0x34, 0x81, 0x8f, 0xa0, 0xfe, 0x9c, 0x05, 0x2c, 0x47, 0x60, 0xa5, 0x92, 0x34,
	0xa1, 0x91, 0x09, 0xd6, 0x59, 0x3b, 0x70, 0xf7, 0x0b, 0x26, 0x32, 0x29, 0xb7, 0xa1, 0x34, 0x1b,
	0x81, 0x92, 0xef, 0xb9, 0x9f, 0x00, 0x49, 0x3b, 0xe9, 0x5e, 0xac, 0x7e, 0x73, 0xf7, 0x73, 0xa8,
	0x9e, 0xf0, 0x73, 0x3f, 0x4c, 0x00, 0xd2, 0xaf, 0xcf, 0x2a, 0x78, 0x7d, 0xa5, 0xc5, 0xd7, 0xe7,
	0xbe, 0x0f, 0x35, 0x9d, 0xe7, 0x36, 0xf3, 0xa0, 0xa2, 0xf8, 0xf4, 0x76, 0x25, 0xdb, 0x85, 0xed,
	0x24, 0x4a, 0xd7, 0xea, 0x77, 0x0b, 0xea, 0x72, 0x46, 0xc4, 0x2b, 0xcd, 0xe7, 0x36, 0xf9, 0xe6,
	0x63, 0x57, 0x4a, 0xeb, 0xd0, 0x01, 0x54, 0x79, 0xe0, 0x0d, 0x66, 0x37, 0x56, 0xea, 0x55, 0xe1,
	0x81, 0xf7, 0x2a, 0x25, 0x39, 0x21, 0xbb, 0x9e, 0xbb, 0x28, 0x1d, 0xab, 0x84, 0xec, 0x3a, 0x71,
	0x91, 0xed, 0xcd, 0x10, 0xd3, 0x94, 0x3f, 0x00, 0x72, 0xc2, 0x47, 0x97, 0xff, 0x65, 0x64, 0x1a,
	0x70, 0x6f, 0x21, 0x54, 0x67, 0x7c, 0x06, 0xf5, 0xd3, 0x30, 0xc8, 0xe7, 0x34, 0xbe, 0x2a, 0x69,
	0x55, 0x08, 0xfa, 0xd2, 0x22, 0x99, 0xc6, 0x4c, 0x0e, 0x9d, 0xfc, 0x2b, 0xf9, 0x72, 0x31, 0xdf,
	0x2d, 0x30, 0x8a, 0x06, 0x06, 0x5f, 0xb5, 0x29, 0xa1, 0x06, 0x24, 0xb0, 0x7b, 0xe2, 0xc7, 0x42,
	0x8e, 0x6a, 0xac, 0x1d, 0xdd, 0x4f, 0xe1, 0x6e, 0xca, 0xa6, 0x07, 0xed, 0x2d, 0x58, 0x97, 0x13,
	0x1a, 0xdb, 0x56, 0xfb, 0xce, 0xf2, 0x69, 0x57, 0x3e, 0x4f, 0xfe, 0xaa, 0xc1, 0xa6, 0x46, 0x22,
	0x3f, 0x5b, 0x50, 0x5b, 0x50, 0x5b, 0xf2, 0x28, 0x17, 0x6b, 0x52, 0x7d, 0xe7, 0xf0, 0x26, 0x37,
	0x7d, 0x85, 0xc3, 0x1f, 0xff, 0xfe, 0xe7, 0xb7, 0x52, 0xdb, 0xdd, 0xeb, 0x49, 0x70, 0xdc, 0xb2,
	0x57, 0xef, 0xf5, 0x74, 0x6c, 0x0f, 0xb5, 0x85, 0x7d, 0x68, 0xbd, 0x49, 0xfe, 0xd0, 0xd3, 0x9b,
	0x55, 0x38, 0xf2, 0x76, 0x0e, 0xa8, 0x40, 0x3d, 0x9d, 0x77, 0x56, 0xf4, 0x5e, 0x89, 0x5d, 0x84,
	0xa1, 0x92, 0xdd, 0xaf, 0x16, 0xec, 0x64, 0x44, 0x9f, 0x3c, 0xce, 0x41, 0x99, 0x97, 0x90, 0xd3,
	0xbd, 0xd9, 0x51, 0xd3, 0x79, 0x84, 0x74, 0x1e, 0x90, 0x96, 0x91, 0x8e, 0xde, 0x43, 0x0c, 0x9b,
	0xb6, 0xa0, 0xc2, 0x86, 0xa6, 0x99, 0xb6, 0x81, 0xa1, 0x69, 0x66, 0x31, 0x2f, 0x2e, 0xcb, 0x14,
	0x63, 0x64, 0x59, 0x7e, 0xb2, 0xa0, 0xb6, 0x20, 0xdc, 0x06, 0x22, 0xa6, 0xad, 0x60, 0x20, 0xb2,
	0x44, 0xff, 0x91, 0x48, 0x8b, 0x98, 0x89, 0x78, 0x18, 0x43, 0xae, 0x01, 0xe6, 0xfa, 0x4f, 0xdc,
	0x5c, 0xea, 0xdc, 0x06, 0x71, 0x3a, 0x85, 0x3e, 0x1a, 0xbb, 0x8d, 0xd8, 0x0e, 0xb1, 0x8d, 0xd8,
	0xe7, 0x4c, 0x10, 0x06, 0xeb, 0xa8, 0xf7, 0xa4, 0x95, 0xcb, 0x97, 0xde, 0x27, 0xce, 0xfe, 0xb2,
	0x63, 0x8d, 0xd4, 0x42, 0xa4, 0xa6, 0x4b, 0x16, 0x90, 0x02, 0xe9, 0x23, 0xab, 0x7c, 0x06, 0x1b,
	0x4a, 0xea, 0x89, 0x31, 0xd1, 0x7c, 0x73, 0x38, 0x0f, 0x96, 0x9e, 0x6b, 0xa4, 0x3d, 0x44, 0x6a,
	0x90, 0x7b, 0x59, 0x24, 0x99, 0x5d, 0x8e, 0xd5, 0x82, 0x4e, 0x1b, 0xba, 0x69, 0x5a, 0x30, 0x86,
	0x6e, 0x9a, 0xe5, 0xde, 0x3c, 0x56, 0x89, 0x1a, 0xe2, 0x73, 0x13, 0xf2, 0xc2, 0x3f, 0x40, 0x25,
	0xa5, 0xed, 0xa4, 0x63, 0xb8, 0x55, 0x56, 0x7c, 0x9d, 0x87, 0xc5, 0x4e, 0x9a, 0xc1, 0x43, 0x64,
	0xb0, 0xef, 0xbe, 0x6e, 0xec, 0xa9, 0x94, 0x60, 0x89, 0xff, 0x27, 0x6a, 0x51, 0x5e, 0x97, 0x8d,
	0x5a, 0xb4, 0x74, 0x1f, 0x18, 0xb5, 0xa8, 0x40, 0xec, 0x8f, 0x90, 0x5b, 0xd7, 0xed, 0x98, 0x1f,
	0x1d, 0xc6, 0xf4, 0x22, 0x95, 0x41, 0xb2, 0x44, 0x15, 0x58, 0xa0, 0x67, 0x50, 0x01, 0x13, 0xaf,
	0xc3, 0x9b, 0xdc, 0x56, 0x53, 0x81, 0x30, 0x29, 0xd7, 0x77, 0x50, 0x9e, 0x6d, 0x24, 0x72, 0x90,
	0xef, 0x43, 0x66, 0x83, 0x39, 0x6e, 0x91, 0xcb, 0x6a, 0x8d, 0xf2, 0xb1, 0x04, 0xcf, 0xd6, 0xbe,
	0x29, 0x4d, 0x86, 0xc3, 0x0d, 0xfc, 0x55, 0x7b, 0xfa, 0x6f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xd9,
	0xd9, 0xa6, 0xe2, 0xea, 0x0d, 0x00, 0x00,
}
